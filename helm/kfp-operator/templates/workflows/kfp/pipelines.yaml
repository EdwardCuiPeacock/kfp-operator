apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
spec:
  templates:
    - name: compile
      outputs:
        artifacts:
        - name: pipeline
          path: /tmp/pipeline.yaml
      metadata:
        {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 8 }}
      container:
        command:
          - python3
        image: "{{`{{workflow.parameters.pipeline-image}}`}}"
        name: pipeline
        volumeMounts:
        - mountPath: /shared
          name: shared
        args:
        - /shared/compile.py
        - --output_file
        - /tmp/pipeline.yaml
        - --pipeline_config
        - |
          {{`{{workflow.parameters.compiler-config}}`}}
        {{ .Values.manager.argo.containerDefaults | toYaml | nindent 8 }}
      volumes:
      - name: shared
      initContainers:
      - args:
        - /shared
        image: {{ include "kfp-operator.trimmedContainerRegistry" . }}kfp-operator-argo-kfp-compiler:{{ .Chart.AppVersion }}
        mirrorVolumeMounts: true
        name: compile
        {{ .Values.manager.argo.containerDefaults | toYaml | nindent 8 }}
    - name: upload
      inputs:
          artifacts:
          - name: pipeline
            path: /tmp/pipeline.yaml
      metadata:
        {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 8 }}
      script:
        command:
        - ash
        image: {{ .Values.containerRegistry }}kfp-operator-argo-kfp-sdk:{{ .Chart.AppVersion }}
        source: |-
          set -e -o pipefail
          kfp-ext --endpoint '{{`{{workflow.parameters.kfp-endpoint}}`}}' --output json pipeline upload --pipeline-name '{{`{{workflow.parameters.pipeline-name}}`}}' '/tmp/pipeline.yaml' | jq -r '."Pipeline Details"."Pipeline ID"'
      {{ .Values.manager.argo.containerDefaults | toYaml | nindent 8 }}
    - name: update
      inputs:
        artifacts:
        - name: pipeline
          path: /tmp/pipeline.yaml
        parameters:
        - name: pipeline-id
      metadata:
        {{ .Values.manager.argo.metadataDefaults | toYaml | nindent 8 }}
      script:
        command:
        - ash
        image: {{ .Values.containerRegistry }}kfp-operator-argo-kfp-sdk:{{ .Chart.AppVersion }}
        source: |-
          set -e -o pipefail
          kfp-ext --endpoint '{{`{{workflow.parameters.kfp-endpoint}}`}}' --output json pipeline upload-version --pipeline-version '{{`{{workflow.parameters.pipeline-version}}`}}' --pipeline-id '{{`{{input.parameters.pipeline-id}}`}}' '/tmp/pipeline.yaml' | jq -r '."Version name"'
      {{ .Values.manager.argo.containerDefaults | toYaml | nindent 8 }}
    - name: delete
      metadata:
        {{ .Values.manager.argo.metadataDefaults | toYaml | nindent 8 }}
      script:
        command:
        - ash
        image: {{ .Values.containerRegistry }}kfp-operator-argo-kfp-sdk:{{ .Chart.AppVersion }}
        source: |-
          set -e -o pipefail
          kfp-ext --endpoint '{{`{{workflow.parameters.kfp-endpoint}}`}}' --output json pipeline delete '{{`{{workflow.parameters.pipeline-id}}`}}'
      {{ .Values.manager.argo.containerDefaults | toYaml | nindent 8 }}
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-create-pipeline
spec:
  arguments:
    parameters:
      - name: compiler-config
      - name: pipeline-image
      - name: pipeline-name
      - name: pipeline-version
      - name: kfp-endpoint
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
    - name: main
      outputs:
        parameters:
        - name: pipeline-id
          valueFrom:
            parameter: '{{`{{steps.upload.outputs.result}}`}}'
        - name: pipeline-version
          valueFrom:
            parameter: '{{`{{steps.update.outputs.result}}`}}'
      steps:
      - - name: compile
          templateRef:
            name: pipeline-steps
            template: compile
            clusterScope: true
      - - name: upload
          arguments:
            artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
              name: pipeline
          templateRef:
            name: pipeline-steps
            template: upload
            clusterScope: true
      - - name: update
          arguments:
            artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
              name: pipeline
            parameters:
            - name: pipeline-id
              value: '{{`{{steps.upload.outputs.result}}`}}'
          continueOn:
            failed: true
          templateRef:
            name: pipeline-steps
            template: update
            clusterScope: true
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-update-pipeline
spec:
  arguments:
    parameters:
      - name: compiler-config
      - name: pipeline-image
      - name: pipeline-id
      - name: pipeline-version
      - name: kfp-endpoint
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
    - name: main
      outputs:
        parameters:
        - name: pipeline-version
          valueFrom:
            parameter: '{{`{{steps.update.outputs.result}}`}}'
      steps:
      - - name: compile
          templateRef:
            name: pipeline-steps
            template: compile
            clusterScope: true
      - - name: update
          arguments:
            artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
              name: pipeline
            parameters:
              - name: pipeline-id
                value: '{{`{{workflow.parameters.pipeline-id}}`}}'
          templateRef:
            name: pipeline-steps
            template: update
            clusterScope: true
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: kfp-operator-delete-pipeline
spec:
  arguments:
    parameters:
    - name: pipeline-id
    - name: kfp-endpoint
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
  - name: main
    steps:
    - - name: delete
        templateRef:
          name: pipeline-steps
          template: delete
          clusterScope: true
